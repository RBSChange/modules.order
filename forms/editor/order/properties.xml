<?xml version="1.0" encoding="UTF-8"?>
<panel>
	<section labeli18n="m.order.bo.general.order-informations">
		<sectionrow labeli18n="m.order.bo.general.website" id="website" />
		<sectionrow labeli18n="m.order.bo.general.reference" id="reference" />
		<sectionrow labeli18n="m.order.bo.general.date" id="creationdate" />
		<section class="customer" />
		<field name="commentadmin" type="longtext" />
	</section>
	<section labeli18n="m.order.bo.general.order-details">
		<section class="orderlines" />
	</section>
	<section labeli18n="m.order.bo.general.coupon" class="couponSection">
		<sectionrow labeli18n="m.order.bo.general.coupon-name" id="couponSectionName" />
		<sectionrow labeli18n="m.order.bo.general.coupon-code" id="couponSectionCode" />
	</section>
	<section labeli18n="m.order.bo.doceditor.section.discounts" class="discountsSection">
		<section class="discountlines" />
	</section>
	<section labeli18n="m.order.bo.general.amount">
		<sectionrow labeli18n="m.order.bo.general.sub-total" id="subTotal" />
		<sectionrow labeli18n="m.order.frontoffice.coupon-name" id="couponName" />
		<sectionrow labeli18n="m.order.frontoffice.discount-name" id="discountTotal" />
		<sectionrow labeli18n="m.order.bo.general.shipping-fees" id="shippingFees" />
		<sectionrow labeli18n="m.order.bo.general.billing-mode" id="billingMode" />
		<sectionrow labeli18n="m.order.bo.general.billing-fees" id="billingFees" />
		<sectionrow labeli18n="m.order.bo.doceditor.panel.carts.tva-amounts" id="tvaAmounts" />
		<sectionrow labeli18n="m.order.bo.doceditor.property.used-credit-note" id="usedCreditNote" />
		<sectionrow labeli18n="m.order.bo.general.total-to-pay" id="totalAmount" />
	</section>
	<xul>
		<javascript>
			<constructor><![CDATA[
				var me = this;
				this.extendMethod("fireInitializeComplete", this.initializeExtra);				
				this.addEventListener("gridInitialised", function (event) { return me.onGridInitialised(event); }, true);
				
				// Print order button.
				var button = this.addActionButton("${trans:m.order.bo.actions.view-printable-version,ucf,js}", "{IconsBase}/small/printer.png");
				button.addEventListener('command', function () { me.printOrder(); }, true);
			]]></constructor>
			<field name="mPropIds">["website", "reference", "creationdate",
				"subTotal", "couponName", "shippingFees", "billingMode", "billingFees",
				"tvaAmounts", "discountTotal", "usedCreditNote", "totalAmount",
				"couponSectionName", "couponSectionCode"]</field>
			<field name="mOrderlines">null</field>
			<field name="mDiscountLines">null</field>
			<field name="mInitData">null</field>
			<method name="onGridInitialised">
				<parameter name="event" />
				<body><![CDATA[	
					var grid = event.originalTarget;
					if (grid.className == 'orderlines')
					{
						this.mOrderlines = grid;
						if (this.mInitData && this.mInitData.lines)
						{
							this.mOrderlines.initJSONDataset(this.mInitData.lines);
						}	
						else
						{
							this.mOrderlines.initJSONDataset(null);
						}
					}
					else if (grid.className == 'discountlines')
					{
						this.mDiscountLines = grid;
						if (this.mInitData && this.mInitData.discountDataArray)
						{
							this.mDiscountLines.initJSONDataset(this.mInitData.discountDataArray);
						}	
						else
						{
							this.mDiscountLines.initJSONDataset(null);
						}
					}		
				]]></body>
			</method>
			<method name="initializeExtra">
				<parameter name="result" />
				<body><![CDATA[
					if (result.status != 'OK')
					{
						this.mInitData = null;
						return;
					}
					
					this.mInitData = result.contents;					
					var informations = this.mInitData.informations;
					
					for each (var name in this.mPropIds)
					{
						var node = document.getAnonymousElementByAttribute(this, "anonid", name);
						if (informations[name])
						{
							node.setAttribute('value', informations[name]);
							node.parentNode.removeAttribute('collapsed');
						}
						else
						{
							node.parentNode.setAttribute('collapsed', 'true');
						}
					}
					
					var customerSection = document.getAnonymousElementByAttribute(this, 'class', 'customer');
					customerSection.setAttribute('customerId', informations['customerId']);
					customerSection.setAttribute('email', informations['email']);
					
					if (!informations['couponName'])
					{
						document.getAnonymousElementByAttribute(this, 'class', 'couponSection').setAttribute('collapsed', 'true');
					}
					else
					{
						document.getAnonymousElementByAttribute(this, 'class', 'couponSection').removeAttribute('collapsed');
					}
					
					// Lines handling.
					if (this.mOrderlines)
					{
						this.mOrderlines.initJSONDataset(this.mInitData.lines);
					}
					
					if (this.mDiscountLines)
					{
						this.mDiscountLines.initJSONDataset(this.mInitData.discountDataArray);
					}
					
					if (this.mInitData.discountDataArray.length == 0)
					{
						document.getAnonymousElementByAttribute(this, 'class', 'discountsSection').setAttribute('collapsed', 'true');
					}
					else
					{
						document.getAnonymousElementByAttribute(this, 'class', 'discountsSection').removeAttribute('collapsed');
					}
				]]></body>
			</method>
			<method name="printOrder">
				<body><![CDATA[
					var url = wCore.buildServerUrl('order', 'PrintOrder', { mode: 'Properties', cmpref: this.documentEditor.documentid, lang: this.documentEditor.vo });												
					wToolkit.openurl(url);
				]]></body>
			</method>
		</javascript>
	</xul>
</panel>